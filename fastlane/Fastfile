# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.120.0"

default_platform :ios

platform :ios do

  #----------Preparing
  before_all do
    setup_circle_ci

    #setting crashlytics
    ENV["CRASHLYTICS_TOKEN"] = "a58319df29eb3929f0ed864166f3c42deb476e66"
    ENV["CRASHLYTICS_SECRET"] = "3b5009c215f001848f3030458e2bbb292e68c6b82a2a092424a1caf7a1ee6225"
    ENV["CRASHLYTICS_GROUPS"] = "ios"

    #custom default env
    ENV["SCHEME_STAGING"] = "Staging"
    ENV["SCHEME_APPSTORE"] = "AppStore"
    ENV["SCHEME_APPSTORE_STAGING"] = "AppStore Staging"

    ENV["BUNDLE_ID_APPSTORE"] = "com.flatstack.ios.Swift-Base"
    ENV["BUNDLE_ID_APPSTORE_STAGING"] = "com.flatstack.ios.Swift-Base.staging"
  end


  #----------Tests
  desc "Runs all the tests"
  lane :test do

    scan(
      scheme: ENV["SCHEME_STAGING"],
      clean: true,
      devices: ["iPhone Xs (12.2)"]
	)

  end


  #----------Helpers
  desc "Deploy Staging to testflight"
  lane :deploy_to_testflight_staging do |options|

    clear_derived_data()

    match(type: "appstore")

    make_ipa(
	  scheme_name: ENV["SCHEME_APPSTORE_STAGING"]
    export_method: "app-store"
	)

    deploy_testflight(
	  app_identifier: ENV["BUNDLE_ID_APPSTORE_STAGING"]
	)

  end


  desc "Deploy Staging to crashlytics"
  lane :deploy_to_crashlytics_staging do |options|

    clear_derived_data()

    match(type: "adhoc")

    make_ipa(
	   scheme_name: ENV["SCHEME_STAGING"]
     export_method: "ad-hoc"
	)

    deploy_crashlytics(
      crashlytics_notes_path: ENV["CHANGELOG_FILE"]
	)

  end

  #----------------------PRIVATE

  desc "Make an ipa file. Need params :scheme_name as String"
  private_lane :make_ipa do |options|

    gym(
	  scheme: options[:scheme_name],
	  clean: true,
	  include_symbols: true,
	  export_method: options[:export_method],
	  include_bitcode: false,
	)

  end


  desc "Deploy a scheme to crashlytics. Need params - :crashlytics_notes_path as String"
  private_lane :deploy_crashlytics do |options|

    crashlytics(
  	  crashlytics_path: "./Pods/Crashlytics",
	  notes_path: options[:crashlytics_notes_path],
 	  api_token: ENV["CRASHLYTICS_TOKEN"],
  	  build_secret: ENV["CRASHLYTICS_SECRET"],
      groups: ENV["CRASHLYTICS_GROUPS"],
	  notifications: true
    )

  end


  desc "Deploy a scheme to testflight. Need params - :app_identifier as String"
  private_lane :deploy_testflight do |options|

    deliver(
	  app_identifier: options[:app_identifier],
	  skip_screenshots: true,
	  skip_metadata: true,
	  submit_for_review: false,
	  automatic_release: false,
	  force: true,
	)

  end

  #-----------------Error
  error do |lane, exception|

    clean()

    #slack(
    #   message: exception.message,
    #   success: false
    #)
  end
end

# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
